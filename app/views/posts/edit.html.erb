
<div id ='tag-sidebar' class="navbar-fixed col-lg-2">

  <% if @post.tags.any? %>

    <% @post.tags.each do |tag| %>

      <h4 class='text-center'>

      <%= link_to tag, tag_posts_path(tag) %> 

      </h4>

    <% end %>

  <% end %>

</div>


<div class='edit-post-display post-display col-md-4 col-md-offset-4'>

  <div class='row edit-post-header post-header'>

    <h4>
    <%= @post.title %>
    </h4>
  
  </div>

  <div class='image-container'>

  <% if @post.image_file_name.present? %>

    <div id='original-image'>

    <%= image_tag @post.image.url(:large), class: 'instagram_upload' %>

    </div>

  <% end %>

    <div id='draw'></div>

  </div>
  
  <div class='post-content'>
    
    <%= @post.content %>

  </div>

  <div class='edit-post-tags post-tags'>

      <% if @post.tags.any? %>
        
        <% @post.tags.each do |tag| %>

          <%= link_to tag, tag_posts_path(tag), :class => 'post-tag' %>

        <% end %>

      <% end %>

  </div>

</div>





  <div id='pencil-picker'>
      <form id='pick'>
      <input id='colour' value='#FF6666' type='text' placeholder='Pick a colour'>
      <input id='thickness' type='range' name='thickness' min='1' max='50' value='20'>
      </form>
  </div>

  <div id='eraser-picker'>
    <input id='eraser'type='checkbox' name='erase' value='true'></div>
  </div>

  <%= form_for @post, html: { id: "add_drawing" } do |form| %>

      <%= form.hidden_field :drawing %>

      <%= form.submit %>

  <% end %>

  <% if @post.drawing_file_name.present? %>
    <div id='drawing' style='display: none;'>
      <%= image_tag @post.drawing.url(:large), class: 'instagram_upload' %>
    </div>
  <% end %>


  <input id='canvas-drawing-data' value='#FF6666' type='hidden'>

  <div id='post-id'><%= @post.id %></div>



<script src='https://code.jquery.com/jquery-2.0.3.min.js'></script>
<script>
  window.penColor = $('#colour').val();
  $('#colour').on('change', function() {
    window.penColor = $(this).val();
  });

  window.penThickness = $('#thickness').val();
  $('#thickness').on('change', function() {
    window.penThickness = $(this).val();
  });

  window.eraserAction = $('#eraser').is (':checked');
  $('#eraser').on('change', function() {
    window.eraserAction = $(this).is (':checked');
  });

  var dispatcher = new WebSocketRails(window.location.host + '/websocket');
  var channel = dispatcher.subscribe('drawing')

  function makeCanvasWithPen() {


      function createCanvas(parent, width, height) {
          var canvas = {};
          canvas.node = document.createElement('canvas');
          canvas.context = canvas.node.getContext('2d');
          canvas.node.width = width || 100;
          canvas.node.height = height || 100;
          canvas.node.id = 'canvas-drawing';
          parent.appendChild(canvas.node);

          if($('#drawing img').length){

            var image = new Image;
            image.crossOrigin = '';
            image.src = $('#drawing img').attr('src');
            image.onload = function() {
              canvas.context.drawImage(image, 0, 0);
            }
          }

          return canvas;
      };

      function init(container, canvas, width, height) {

          var ctx = canvas.context;

          function sendData() {

            var drawingData = $('canvas')[0].toDataURL('image/png');

            var postId = $('#post-id').text();

             // var drawingData = $('canvas')[0].toBlob();

            channel.trigger('updated', {data: drawingData, postId: postId });

            // console.log('This is coming from sendData ---->');
            // console.log(drawingData.value);
            // console.log('<----This is coming from sendData');
          
          // console.log((document.getElementById('canvas-drawing')).toDataURL('image/png'));

          };

          // define a custom fillCircle method
          ctx.fillCircle = function(x, y, radius, fillColor, erase) {
              if (erase == true) 
                {
                this.globalCompositeOperation="destination-out";
                }
              else
                {
                this.globalCompositeOperation="source-over"
                }
              this.fillStyle = fillColor;
              this.beginPath();
              this.moveTo(x, y);
              this.arc(x, y, radius, 0, Math.PI * 2, false);
              this.fill();
          };
          

          // bind mouse events
          canvas.node.onmousemove = function(e) {
              // console.log('hi')
              if (!canvas.isDrawing) {
                 return;
              }
              var x = e.pageX - $(this).offset().left;
              var y = e.pageY - $(this).offset().top;
              var radius = window.penThickness;
              var fillColor = window.penColor;
              var erase = window.eraserAction
              ctx.fillCircle(x, y, radius, fillColor, erase);
              
              sendData()  
          
          };
          canvas.node.onmousedown = function(e) {
              canvas.isDrawing = true;
          };
          canvas.node.onmouseup = function(e) {
              canvas.isDrawing = false;
          };
      };

      var container = document.getElementById('draw');

      var height = $('#original-image').height()

      var width = $('#original-image').width()

      var canvas = createCanvas(container, width, height);


      
      init(container, canvas, width, height);

  };

  function saveCanvasImage() {


      function sendImage(drawingSource) {

          document.getElementById('add_drawing').post_drawing.value = drawingSource;

      };

      var drawing = document.getElementById('canvas-drawing');

      var drawingSource = drawing.toDataURL('image/png');

      sendImage(drawingSource)

  };


  $(document).ready(function(){

      
      var drawingDataInput = $('#canvas-drawing-data');

      console.log(drawingDataInput);
      console.log(drawingDataInput.val());



      $(window).load (function() {

          makeCanvasWithPen();

      });


      $('#add_drawing').on ('submit', function() {

          saveCanvasImage()

      });


      $('#eraser').click (function () {
        
        var eraserOn = $(this);
          
          if (eraserOn.is (':checked')) {
            console.log('Success!')
            console.log($(this).val())
            console.log(window.eraserAction)
          }

      });

  });


</script>

